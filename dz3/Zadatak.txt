
У оквиру овог задатка, потребно је имплементирати структуру генерализованог
бинарног хипа, односно m-арни хип, имплементираног у вектору, која ће се користити за
имплементацију приоритетног реда. Генерализовани m-арни хип је комплетно или скоро
комплетно m-арно стабло за које важи правило уређености хипа. Тако је бинарни хип
заправо 2-хип, тернарни је 3-хип и слично. За ову примену потребно је имплементирати
min-m-heap. Написати на језику C++ потребне класе за реализацију хипа који садржи
целобројне кључеве. Операције које треба реализовати су:

• [5 поена] void init(int m) - стварање новог (празног) хипа реда m
• [10 поена] void add(int elem, int &steps) - додавање елемента у хип
• [5 поена] int get() - дохватање минималног елемента хипа
• [10 поена] int delete(int &steps) - брисање минималног елемента
• [15 поена] convertTo(int newM) - претварање хипа у хип задатог новог реда
• [15 поена] union(Heap h, int &steps) - додавање једног хипа другом (спајање хипова) – резултат је измењен хип за који се операција позива
• [5 поена] operator<< - испис хипа у облику m-арног стабла
• [5 поена] void destroy() - брисање (уништавање) хипа

У зависности од редног броја проблема i који се решава, реализовати и следећу
операцију:
0. [10 поена] Промена вредности произвољног кључа
1. [10 поена] Брисање произвољног кључа

Свака операција спајања, уметања и брисања треба да врати број корака који је био
потребан да би хип добио свој коначни изглед. У кораке се броје поређења и замене места
елемената (чворова) у хипу.
Исправна реализација хипа подразумева да, поред наведених метода, постоје друге
потребне методе (попут конструктора и деструктора). Студентима се препушта да у
класу додају оне методе које сматрају потребним за успешну реализацију. Програм
такође треба да води рачуна о исправном коришћењу меморије.
Реализовати програм са једноставним интерактивним менијем који кориснику омогућава
рад са јавним методама хипа. Главни програм треба да омогући учитавање елемената из
командне линије или датотеке, као и стварање случајних вредности за унос.

Главни програм и тестирање [20 поена]
Функција за тестирање користи реализован хип за имплементацију приоритетног реда.
Приоритетни ред подржава функције:
• Стварања реда
• Испитивања да ли је ред празан
• Дохватање првог елемента реда
• Брисање (са или без дохватања) првог елемента реда
• Уметање елемента у ред
Реализовати главни програм са једноставним интерактивним менијем који кориснику
омогућава рад са јавним методама. Главни програм треба да омогући учитавање
елемената из командне линије или датотеке, као и стварање случајних вредности за унос.
Главни програм треба да омогући и мерење перформанси. Перформансе треба дати у
следећем табеларном облику:
       Величина скупа  података и ред хипа | Време уметања | Број корака приликом уметања | Време избацивања | Број корака приликом избацивања
100, 2
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
100, 4
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
100, 8
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
1000, 2
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
1000, 4
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
1000, 8
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
10 000, 2
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
10 000, 4
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
10 000, 8
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
100 000, 2
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
100 000, 4
-------------------------------------------|---------------|------------------------------|------------------|----------------------------------
100 000, 8                                 |               |                              |                  |

Величина скупа података је број елемената који треба генерисати или учитати из
датотеке. Време уметања представља време потребно за убацивање једног по једног
елемента из датог скупа у иницијално празан хип. Број корака приликом уметања је сума
броја корака за сваки убачени елемент. Време избацивања представља време потребно
да се из тог формираног хипа избацује (минимални) елемент по (минимални) елемент.
Број корака приликом избацивања је сума броја корака за сваки избачени елемент.
